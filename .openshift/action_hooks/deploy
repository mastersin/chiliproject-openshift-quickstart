#!/bin/bash
# This deploy hook gets executed after dependencies are resolved and the
# build hook has been run but before the application has been started back
# up again.  This script gets executed directly, so it could be python, php,
# ruby, etc.

set -e

if [ -z $OPENSHIFT_DB_HOST ]
then
    echo 1>&2
    echo "Could not find mysql database.  Please run:" 1>&2
    echo "rhc-ctl-app -a $OPENSHIFT_APP_NAME -e add-mysql-5.1" 1>&2
    echo "then make a sample commit (add whitespace somewhere) and re-push" 1>&2
    echo 1>&2
    exit 5
fi

LANG="en"
# Confirm database exists, if not create it
if ! /usr/bin/mysql -u "$OPENSHIFT_DB_USERNAME" --password="$OPENSHIFT_DB_PASSWORD" -h "$OPENSHIFT_DB_HOST" -e "select * from users;" "$OPENSHIFT_APP_NAME" > /dev/null 2>&1
then
    echo
    echo "Schema not found!  Importing schema from .openshift/action_hooks/chiliproject.$LANG.sql"
    echo
    /usr/bin/mysql -u "$OPENSHIFT_DB_USERNAME" --password="$OPENSHIFT_DB_PASSWORD" -h "$OPENSHIFT_DB_HOST" "$OPENSHIFT_APP_NAME" < "$OPENSHIFT_REPO_DIR/.openshift/action_hooks/chiliproject.$LANG.sql"
    echo
    echo "done."
else
    echo "Database found, skipping import."
fi

pushd ${OPENSHIFT_REPO_DIR} > /dev/null
bundle exec rake generate_session_store

#bundle exec rake db:migrate RAILS_ENV="production"
#bundle exec rake db:migrate:plugins RAILS_ENV=production

#bundle exec rake tmp:cache:clear
#bundle exec rake tmp:sessions:clear
popd > /dev/null
